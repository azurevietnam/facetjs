// Generated by CoffeeScript 1.6.2
(typeof window === 'undefined' ? {} : window)['applyStringer'] = (function(module, require){"use strict"; var exports = module.exports;
var arithemticMap, convertApply, convertApplyHelper;

arithemticMap = {
  'add': '+',
  'subtract': "-",
  'multiply': "*",
  'divide': "/"
};

convertApplyHelper = function(apply, from) {
  var arithmetic, expr, mappedArithmetic, op1, op2, _ref;

  if (apply.aggregate) {
    switch (apply.aggregate) {
      case 'constant':
        expr = String(apply.value);
        break;
      case 'sum':
      case 'min':
      case 'max':
      case 'uniqueCount':
        if (!apply.attribute) {
          throw new Error("must have attribute");
        }
        expr = "" + apply.aggregate + "(`" + apply.attribute + "`)";
        break;
      default:
        throw new Error("unsupported aggregate '" + apply.aggregate + "'");
    }
  } else if (apply.arithmetic) {
    arithmetic = apply.arithmetic;
    mappedArithmetic = arithemticMap[arithmetic];
    if (!mappedArithmetic) {
      throw new Error("no such arithmetic '" + arithmetic + "'");
    }
    if (!apply.operands) {
      throw new Error("must have operands");
    }
    _ref = apply.operands, op1 = _ref[0], op2 = _ref[1];
    expr = "" + (convertApplyHelper(op1, arithmetic)) + " " + mappedArithmetic + " " + (convertApplyHelper(op2, arithmetic));
    if (from === 'divide' || (from === 'multiply' && (arithmetic === 'add' || arithmetic === 'subtract'))) {
      expr = "(" + expr + ")";
    }
  } else {
    throw new Error("must have an aggregate or an arithmetic");
  }
  return expr;
};

module.exports = convertApply = function(apply) {
  if (!apply.name) {
    throw new Error("must have name");
  }
  return "" + apply.name + " <- " + (convertApplyHelper(apply, 'add'));
};

return module.exports; }).call(this,
  (typeof module === 'undefined' ? {exports: {}} : module),
  (typeof require === 'undefined' ? function (modulePath) {
    var moduleParts = modulePath.split('/');
    return window[moduleParts[moduleParts.length - 1]];
  } : require)
);
